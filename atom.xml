<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>啦啦啦拉比克</title>
  
  <subtitle>喜欢的话就坚持吧。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ash1daMANA.github.io/"/>
  <updated>2018-01-02T01:41:24.167Z</updated>
  <id>http://ash1daMANA.github.io/</id>
  
  <author>
    <name>taoyong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring boot配置静态资源</title>
    <link href="http://ash1daMANA.github.io/2018/01/01/spring-boot/"/>
    <id>http://ash1daMANA.github.io/2018/01/01/spring-boot/</id>
    <published>2018-01-01T14:44:25.000Z</published>
    <updated>2018-01-02T01:41:24.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring-boot-配置静态资源"><a href="#spring-boot-配置静态资源" class="headerlink" title="spring boot 配置静态资源"></a>spring boot 配置静态资源</h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p><strong>spring boot</strong>是一个适合进行快速开发的框架，<strong>spring boot</strong>奉行“习惯优于配置”的原则，其目的是为了简化应用的初始搭建。使用<br>java配置替代xml配置，并且内嵌了Tomcat容器，应用可以直接以jar包的形式运行。</p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><br></h2><p>那么这里问题就来了：因为内嵌Tomcat，应用以java -jar的形式启动以后，假如有这样的场景，用户需要自定义头像，那么就需要上传图片，这个图片保存在哪呢？的确，应用中<strong>static</strong>文件夹会存放一些如logo.ico、jQuery.js这类的静态资源。那么用户自定义的图片也存放在这不合适吧。当然有小伙伴会想到把图片序列化成二进制数据保存到数据库中，这种方法也是可行的，但这样IO成本会增大；还有一种方法就是保存在服务器的本地文件夹中，由应用来读取本地的静态资源。</p><a id="more"></a><h3 id="spring-boot配置"><a href="#spring-boot配置" class="headerlink" title="spring boot配置"></a>spring boot配置</h3><blockquote><p>application.properties</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server.port=5200</span><br><span class="line">server.session.timeout=3600</span><br><span class="line">server.context-path=/MySchool</span><br><span class="line">server.tomcat.uri-encoding=utf-8</span><br><span class="line">server.tomcat.max-threads=20</span><br><span class="line">spring.thymeleaf.cache=false</span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line"></span><br><span class="line">debug=false</span><br><span class="line">mybatis.mapper-locations=classpath:mapping/*.xml</span><br><span class="line">mybatis.type-aliases-package=com.ty.myschool.entity</span><br><span class="line"></span><br><span class="line">spring.mail.host=smtp.163.com</span><br><span class="line">spring.mail.username=123@163.com</span><br><span class="line">spring.mail.password=123</span><br><span class="line">spring.mail.properties.mail.smtp.auth=true</span><br><span class="line">spring.mail.properties.mail.smtp.starttls.enable=true</span><br><span class="line">spring.mail.properties.mail.smtp.starttls.required=true</span><br><span class="line">spring.mail.default-encoding=utf-8</span><br><span class="line"></span><br><span class="line">jdbc.type=mysql</span><br><span class="line">jdbc.driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.jdbcUrl=jdbc:mysql://localhost:3306/onlineschool?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=123</span><br><span class="line">jdbc.connectionTestQuery=SELECT 1 FROM dual</span><br><span class="line">jdbc.maximumPoolSize=12</span><br><span class="line">jdbc.minimumIdle=1</span><br><span class="line">jdbc.maxLifetime=2000000</span><br><span class="line">jdbc.connectionTimeout=30000</span><br><span class="line">jdbc.idleTimeout=30000</span><br><span class="line"></span><br><span class="line">mail.findPassword.subject=密码重置邮件</span><br><span class="line">mail.findPassword.content=请点击以下链接&lt;br/&gt;&lt;a href=&apos;&#123;0&#125;&apos;&gt;重置密码&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">static.url=/usr/local/project/myschool/static/</span><br><span class="line">static.picture.url=file/pictures/</span><br><span class="line">static.video.url=file/videos/</span><br><span class="line">static.websource.url=file/websource/</span><br></pre></td></tr></table></figure><blockquote><p>adapter</p></blockquote><p>这里需要写一个<strong>@configuration</strong>标注的继承WebMvcConfigurerAdapter的类，参考如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class WebSourceAdapter  extends WebMvcConfigurerAdapter&#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;static.url&#125;&quot;)</span><br><span class="line">    private String staticUrl;</span><br><span class="line">    @Value(&quot;$&#123;static.picture.url&#125;&quot;)</span><br><span class="line">    private String pictureUrl;</span><br><span class="line">    @Value(&quot;$&#123;static.video.url&#125;&quot;)</span><br><span class="line">    private String videoUrl;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">        registry.addResourceHandler(&quot;/file/pictures/**&quot;).addResourceLocations(&quot;file:&quot;+staticUrl+pictureUrl);</span><br><span class="line">        registry.addResourceHandler(&quot;/file/videos/**&quot;).addResourceLocations(&quot;file:&quot;+staticUrl+videoUrl);</span><br><span class="line">        super.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用的是代码方式拦截器来映射静态资源，<strong>file：</strong>的作用是定位到本地的文件夹，这里的意思是请求的路径为<strong>/file/pictures/</strong>去定位到本地文件夹中去寻找资源。</p><hr><p>接下来我用的虚拟机，系统是centos6.5来模拟服务器。<br>应用打jar包上传后进行启动。<br><br><br>因为应用中没写保存文件的方法，这里我写了一个测试类，并且在源路径上放置一张图片，执行测试方法以后，图片保存到配置文件中的目标路径中，<br>再由浏览器直接访问。</p><blockquote><p>Test.java</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line"></span><br><span class="line">public class Test &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception&#123;</span><br><span class="line">        String baseUrl=&quot;/root/nginx/image/1.jpg&quot;;</span><br><span class="line">        String targetUrl=&quot;/usr/local/project/myschool/static/&quot;+&quot;file/pictures/&quot;;</span><br><span class="line">        File file=new File(baseUrl);</span><br><span class="line">        File outfile=new File(targetUrl);</span><br><span class="line">        if(!outfile.exists())&#123;</span><br><span class="line">            outfile.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        FileInputStream fileInputStream = new FileInputStream(file);</span><br><span class="line">        FileOutputStream fileOutputStream = new FileOutputStream(targetUrl+&quot;mana.jpg&quot;);</span><br><span class="line">        int len=0;</span><br><span class="line">        byte b[] = new byte[1024];</span><br><span class="line">        while ((len = fileInputStream.read(b)) != -1) &#123;</span><br><span class="line">            fileOutputStream.write(b);</span><br><span class="line">        &#125;</span><br><span class="line">        fileInputStream.close();</span><br><span class="line">        fileOutputStream.flush();</span><br><span class="line">        fileOutputStream.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>下面是源路径/root/nginx/image/1.jpg</p></blockquote><p><img src="https://s1.ax1x.com/2018/01/02/ppVKKO.jpg" alt="tu1"></p><p><br></p><blockquote><p>然后请求链接，没找到资源。<br><a href="http://192.168.1.13:5200/MySchool/file/pictures/mana.jpg" target="_blank" rel="external">http://192.168.1.13:5200/MySchool/file/pictures/mana.jpg</a></p></blockquote><p><img src="https://s1.ax1x.com/2018/01/02/ppVMrD.jpg" alt="tu2"></p><p><br></p><blockquote><p>接下来javac Test.java、 java Test编译执行测试类。再次访问以上链接。</p></blockquote><p><img src="https://s1.ax1x.com/2018/01/02/ppV1VH.jpg" alt="tu3"></p><p><br></p><blockquote><p>访问目标路径，发现文件夹下已存在图片。</p></blockquote><p><img src="https://s1.ax1x.com/2018/01/02/ppV3ad.jpg" alt="tu4"></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这个小测试算是完成了，对于http请求的动静分离我们还可以使用nginx来进行反向代理，下次我再使用nginx来做一次测试。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;spring-boot-配置静态资源&quot;&gt;&lt;a href=&quot;#spring-boot-配置静态资源&quot; class=&quot;headerlink&quot; title=&quot;spring boot 配置静态资源&quot;&gt;&lt;/a&gt;spring boot 配置静态资源&lt;/h1&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;spring boot&lt;/strong&gt;是一个适合进行快速开发的框架，&lt;strong&gt;spring boot&lt;/strong&gt;奉行“习惯优于配置”的原则，其目的是为了简化应用的初始搭建。使用&lt;br&gt;java配置替代xml配置，并且内嵌了Tomcat容器，应用可以直接以jar包的形式运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;/h2&gt;&lt;p&gt;那么这里问题就来了：因为内嵌Tomcat，应用以java -jar的形式启动以后，假如有这样的场景，用户需要自定义头像，那么就需要上传图片，这个图片保存在哪呢？的确，应用中&lt;strong&gt;static&lt;/strong&gt;文件夹会存放一些如logo.ico、jQuery.js这类的静态资源。那么用户自定义的图片也存放在这不合适吧。当然有小伙伴会想到把图片序列化成二进制数据保存到数据库中，这种方法也是可行的，但这样IO成本会增大；还有一种方法就是保存在服务器的本地文件夹中，由应用来读取本地的静态资源。&lt;/p&gt;
    
    </summary>
    
      <category term="springboot" scheme="http://ash1daMANA.github.io/categories/springboot/"/>
    
    
      <category term="java" scheme="http://ash1daMANA.github.io/tags/java/"/>
    
      <category term="spring" scheme="http://ash1daMANA.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>maven</title>
    <link href="http://ash1daMANA.github.io/2017/11/21/maven/"/>
    <id>http://ash1daMANA.github.io/2017/11/21/maven/</id>
    <published>2017-11-21T07:37:20.000Z</published>
    <updated>2017-11-21T07:59:33.937Z</updated>
    
    <content type="html"><![CDATA[<h3 id="pom-xml-配置-相关整理"><a href="#pom-xml-配置-相关整理" class="headerlink" title="pom.xml 配置 相关整理"></a>pom.xml 配置 相关整理</h3><blockquote><p>packaging</p></blockquote><hr><a id="more"></a><blockquote><p>properties</p></blockquote><hr><blockquote><p>dependency</p></blockquote><hr><blockquote><blockquote><p>optional</p></blockquote></blockquote><hr><blockquote><blockquote><p>test</p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;pom-xml-配置-相关整理&quot;&gt;&lt;a href=&quot;#pom-xml-配置-相关整理&quot; class=&quot;headerlink&quot; title=&quot;pom.xml 配置 相关整理&quot;&gt;&lt;/a&gt;pom.xml 配置 相关整理&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;packaging&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="maven" scheme="http://ash1daMANA.github.io/categories/maven/"/>
    
    
      <category term="maven" scheme="http://ash1daMANA.github.io/tags/maven/"/>
    
      <category term="pom.xml" scheme="http://ash1daMANA.github.io/tags/pom-xml/"/>
    
  </entry>
  
  <entry>
    <title>linux</title>
    <link href="http://ash1daMANA.github.io/2017/11/21/linux/"/>
    <id>http://ash1daMANA.github.io/2017/11/21/linux/</id>
    <published>2017-11-21T07:37:20.000Z</published>
    <updated>2017-11-21T07:59:23.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux-常用命令整理"><a href="#linux-常用命令整理" class="headerlink" title="linux 常用命令整理"></a>linux 常用命令整理</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux-常用命令整理&quot;&gt;&lt;a href=&quot;#linux-常用命令整理&quot; class=&quot;headerlink&quot; title=&quot;linux 常用命令整理&quot;&gt;&lt;/a&gt;linux 常用命令整理&lt;/h2&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://ash1daMANA.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://ash1daMANA.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>win10下解决MarkdownPad2 html渲染出错的问题</title>
    <link href="http://ash1daMANA.github.io/2017/11/15/1/"/>
    <id>http://ash1daMANA.github.io/2017/11/15/1/</id>
    <published>2017-11-15T10:26:18.324Z</published>
    <updated>2017-11-20T15:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>第一次使用MarkdownPad2的小伙伴可能会遇到这个问题：html渲染组件出错。根据官方说法，win8系统中会存在这个问题，当然win10也不例外。<br><a id="more"></a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>为了修复这个问题，你需要安装一个SDK工具包  </p><blockquote><p>please click here ! <a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="external">Awesomium 1.6.6 SDK</a></p></blockquote><p>若以上方案没有解决的话，再尝试安装个微软的渲染插件</p><blockquote><p>please click here ! <a href="http://www.microsoft.com/en-us/download/details.aspx?id=8109" target="_blank" rel="external">Microsoft’s DirectX End-User Runtimes (June 2010).</a></p></blockquote><p>若以上方案都没有解决的话 <strong>那换个电（工）脑（具）吧</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;第一次使用MarkdownPad2的小伙伴可能会遇到这个问题：html渲染组件出错。根据官方说法，win8系统中会存在这个问题，当然win10也不例外。&lt;br&gt;
    
    </summary>
    
      <category term="markdown" scheme="http://ash1daMANA.github.io/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://ash1daMANA.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
